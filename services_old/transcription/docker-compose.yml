version: '3.8'

services:
  # Redis service for Celery broker and result backend
  redis:
    image: redis:7-alpine
    container_name: youtube_transcript_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - transcript_network

  # FastAPI application service
  web:
    build:
      context: .
      dockerfile: Dockerfile.selenium
    container_name: youtube_transcript_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - transcript_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker service
  worker:
    build:
      context: .
      dockerfile: Dockerfile.selenium
    container_name: youtube_transcript_worker
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: celery -A celery_app worker --loglevel=info --concurrency=3 --queues=celery,transcript_queue
    networks:
      - transcript_network
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Celery monitoring (optional)
  flower:
    build:
      context: .
      dockerfile: Dockerfile.selenium
    container_name: youtube_transcript_flower
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A celery_app flower --port=5555
    networks:
      - transcript_network

networks:
  transcript_network:
    driver: bridge

volumes:
  redis_data:
    driver: local