version: '3.8'

networks:
  aiboa_default:
    driver: bridge
    name: aiboa_default

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aiboa_postgres
    environment:
      POSTGRES_DB: aiboa
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    restart: unless-stopped
    networks:
      - aiboa_default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for background tasks
  redis:
    image: redis:7-alpine
    container_name: aiboa_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - aiboa_default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Authentication Service
  auth-service:
    build: ./services/auth
    container_name: aiboa_auth
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/aiboa
      - SECRET_KEY=aiboa-super-secret-key-for-jwt-tokens-min-32-chars
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=false
      - CORS_ORIGINS=http://localhost:3000,http://43.203.128.246,http://43.203.128.246:80,*
    ports:
      - "8002:8002"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - aiboa_default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Transcription Service
  transcription-service:
    build: ./services/transcription
    container_name: aiboa_transcription
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - API_KEY=transcription-api-key-prod-2025
      - ENVIRONMENT=production
      - CORS_ORIGINS=http://localhost:3000,http://43.203.128.246,http://43.203.128.246:80,*
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - aiboa_default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Analysis Service
  analysis-service:
    build: ./services/analysis
    container_name: aiboa_analysis
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8001", "--workers", "1"]
    environment:
      - SOLAR_API_KEY=${SOLAR_API_KEY}
      - UPSTAGE_API_KEY=${UPSTAGE_API_KEY}
      - API_KEY=analysis-api-key-prod-2025
      - ENVIRONMENT=production
      - CORS_ORIGINS=http://localhost:3000,http://43.203.128.246,http://43.203.128.246:80,*
    ports:
      - "8001:8001"
    restart: unless-stopped
    networks:
      - aiboa_default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Workflow Service
  workflow-service:
    build: ./services/workflow
    container_name: aiboa_workflow
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/aiboa
      - AUTH_SERVICE_URL=http://auth-service:8002
      - TRANSCRIPTION_SERVICE_URL=http://transcription-service:8000
      - TRANSCRIPTION_API_KEY=transcription-api-key-prod-2025
      - ANALYSIS_SERVICE_URL=http://analysis-service:8001
      - ANALYSIS_API_KEY=analysis-api-key-prod-2025
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=false
      - CORS_ORIGINS=http://localhost:3000,http://43.203.128.246,http://43.203.128.246:80,http://43.203.128.246:8003,*
    ports:
      - "8003:8003"
    depends_on:
      - postgres
      - redis
      - auth-service
      - analysis-service
      - transcription-service
    restart: unless-stopped
    networks:
      - aiboa_default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build: ./frontend
    container_name: aiboa_frontend
    environment:
      - NODE_ENV=production
      - TRANSCRIPTION_API_URL=http://transcription-service:8000
      - ANALYSIS_API_URL=http://analysis-service:8001
      - AUTH_API_URL=http://auth-service:8002
      - WORKFLOW_API_URL=http://workflow-service:8003
      - NEXT_PUBLIC_TRANSCRIPTION_API_URL=http://43.203.128.246:8000
      - NEXT_PUBLIC_ANALYSIS_API_URL=http://43.203.128.246:8001
      - NEXT_PUBLIC_AUTH_API_URL=http://43.203.128.246:8002
      - NEXT_PUBLIC_WORKFLOW_API_URL=http://43.203.128.246:8003
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - transcription-service
      - analysis-service
      - workflow-service
    restart: unless-stopped
    networks:
      - aiboa_default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: