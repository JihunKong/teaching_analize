# AIBOA Production NGINX Configuration
# Fixes CORS issues and consolidates all traffic through port 80
# Serves frontend static files and proxies API calls to backend services

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/m;

    # Upstream servers - using internal Docker network names
    upstream transcription_backend {
        server aiboa_transcription:8000;
        keepalive 32;
    }

    upstream analysis_backend {
        server aiboa_analysis:8001;
        keepalive 32;
    }

    # Main server configuration
    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # CORS headers for all requests
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Root directory for static files (Next.js build output)
        root /usr/share/nginx/html;
        index index.html;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Favicon handling
        location /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Static file caching for Next.js assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            log_not_found off;
        }

        # Next.js static assets
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # API Routes - Transcription Service
        location /api/transcribe {
            limit_req zone=upload burst=10 nodelay;
            
            # Remove /api prefix before forwarding to transcription service
            rewrite ^/api/transcribe/(.*) /$1 break;
            rewrite ^/api/transcribe$ / break;
            
            proxy_pass http://transcription_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for uploads and processing
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # HTTP/1.1 for keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # API Routes - Analysis Service  
        location /api/analyze {
            limit_req zone=api burst=20 nodelay;
            
            # Remove /api prefix before forwarding to analysis service
            rewrite ^/api/analyze/(.*) /$1 break;
            rewrite ^/api/analyze$ / break;
            
            proxy_pass http://analysis_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for analysis
            proxy_connect_timeout 180s;
            proxy_send_timeout 180s;
            proxy_read_timeout 180s;
            
            # HTTP/1.1 for keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # API Routes - Reports (served by analysis service)
        location /api/reports {
            limit_req zone=api burst=20 nodelay;
            
            # Forward to analysis service, preserving path
            rewrite ^/api/reports/(.*) /reports/$1 break;
            rewrite ^/api/reports$ /reports break;
            
            proxy_pass http://analysis_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 180s;
            proxy_send_timeout 180s;
            proxy_read_timeout 180s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # API Routes - Frameworks (served by analysis service)
        location /api/frameworks {
            limit_req zone=api burst=20 nodelay;
            
            rewrite ^/api/frameworks/(.*) /frameworks/$1 break;
            rewrite ^/api/frameworks$ /frameworks break;
            
            proxy_pass http://analysis_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Service health checks
        location /transcription/health {
            proxy_pass http://transcription_backend/health;
            access_log off;
        }

        location /analysis/health {
            proxy_pass http://analysis_backend/health;
            access_log off;
        }

        # Frontend routes - serve static files with fallback to index.html
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache control for HTML files
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
        }
        
        location = /50x.html {
            internal;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}