# Multi-stage Dockerfile for Playwright E2E testing
# Optimized for consistent test execution in containerized environments

# Stage 1: Base Playwright image with all browsers
FROM mcr.microsoft.com/playwright:v1.40.0-focal AS playwright-base

# Install Node.js 18 (LTS)
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Set working directory
WORKDIR /app

# Create non-root user for security
RUN groupadd -r playwright && useradd -r -g playwright -G audio,video playwright \
    && mkdir -p /home/playwright/Downloads \
    && chown -R playwright:playwright /home/playwright \
    && chown -R playwright:playwright /app

# Stage 2: Dependencies and build
FROM playwright-base AS dependencies

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Install Playwright browsers with dependencies
RUN npx playwright install --with-deps chromium firefox webkit

# Copy source code
COPY --chown=playwright:playwright . .

# Build the application
RUN npm run build

# Stage 3: Test runner
FROM dependencies AS test-runner

# Copy test files
COPY --chown=playwright:playwright tests/ tests/
COPY --chown=playwright:playwright playwright.config.ts .

# Set up test artifacts directory
RUN mkdir -p test-results && chown -R playwright:playwright test-results

# Set environment variables for headless operation
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
ENV CI=true
ENV NODE_ENV=test

# Health check for container readiness
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Switch to non-root user
USER playwright

# Expose ports
EXPOSE 3000 9323

# Default command runs tests
CMD ["npm", "run", "test"]